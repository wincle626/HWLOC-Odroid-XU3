# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright © 2009-2014 Inria.  All rights reserved.
# Copyright © 2009-2012 Université Bordeaux
# Copyright © 2009-2014 Cisco Systems, Inc.  All rights reserved.
# Copyright © 2011-2012 Oracle and/or its affiliates.  All rights reserved.
# See COPYING in top-level directory.


VPATH = ../../src
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hwloc
pkgincludedir = $(includedir)/hwloc
pkglibdir = $(libdir)/hwloc
pkglibexecdir = $(libexecdir)/hwloc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = armv7l-unknown-linux-gnueabihf
host_triplet = armv7l-unknown-linux-gnueabihf
target_triplet = armv7l-unknown-linux-gnueabihf

# Conditionally add to the sources and ldflags
##am__append_1 = topology-xml-libxml.c
#am__append_2 = hwloc_xml_libxml.la
am__append_3 = topology-pci.c
#am__append_4 = hwloc_pci.la
##am__append_5 = topology-opencl.c
#am__append_6 = hwloc_opencl.la
##am__append_7 = topology-cuda.c
#am__append_8 = hwloc_cuda.la
##am__append_9 = topology-nvml.c
#am__append_10 = hwloc_nvml.la
##am__append_11 = topology-gl.c
#am__append_12 = hwloc_gl.la
#am__append_13 = topology-solaris.c \
#	topology-solaris-chiptype.c
am__append_14 = topology-linux.c topology-hardwired.c
#am__append_15 = topology-bgq.c
#am__append_16 = topology-aix.c
#am__append_17 = -lpthread
#am__append_18 = topology-osf.c
#am__append_19 = -lnuma -lpthread
#am__append_20 = topology-hpux.c
#am__append_21 = -lpthread
#am__append_22 = topology-windows.c
#am__append_23 = topology-darwin.c
#am__append_24 = topology-freebsd.c
#am__append_25 = topology-netbsd.c
#am__append_26 = -lpthread
#am__append_27 = topology-x86.c
am__append_28 = -no-undefined
#am__append_29 = -Xlinker --output-def -Xlinker .libs/libhwloc.def
#am__append_30 = $(LTDLINCL)
#am__append_31 = -export-dynamic
am__append_32 = hwloc.dtd
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/hwloc.m4 \
	$(top_srcdir)/config/hwloc_check_attributes.m4 \
	$(top_srcdir)/config/hwloc_check_vendor.m4 \
	$(top_srcdir)/config/hwloc_check_visibility.m4 \
	$(top_srcdir)/config/hwloc_components.m4 \
	$(top_srcdir)/config/hwloc_internal.m4 \
	$(top_srcdir)/config/hwloc_pkg.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/private/autogen/config.h \
	$(top_builddir)/include/hwloc/autogen/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pluginsdir)" \
	"$(DESTDIR)$(xmldir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES) \
	$(plugins_LTLIBRARIES)
hwloc_cuda_la_LIBADD =
am__hwloc_cuda_la_SOURCES_DIST = topology-cuda.c
#am_hwloc_cuda_la_OBJECTS = hwloc_cuda_la-topology-cuda.lo
hwloc_cuda_la_OBJECTS = $(am_hwloc_cuda_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
hwloc_cuda_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(hwloc_cuda_la_CFLAGS) \
	$(CFLAGS) $(hwloc_cuda_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hwloc_cuda_la_rpath =  \
#	-rpath \
#	$(pluginsdir)
hwloc_fake_la_LIBADD =
am__hwloc_fake_la_SOURCES_DIST = topology-fake.c
#am_hwloc_fake_la_OBJECTS = topology-fake.lo
hwloc_fake_la_OBJECTS = $(am_hwloc_fake_la_OBJECTS)
hwloc_fake_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(hwloc_fake_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hwloc_fake_la_rpath =
hwloc_gl_la_LIBADD =
am__hwloc_gl_la_SOURCES_DIST = topology-gl.c
#am_hwloc_gl_la_OBJECTS = hwloc_gl_la-topology-gl.lo
hwloc_gl_la_OBJECTS = $(am_hwloc_gl_la_OBJECTS)
hwloc_gl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(hwloc_gl_la_CFLAGS) \
	$(CFLAGS) $(hwloc_gl_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hwloc_gl_la_rpath =  \
#	-rpath \
#	$(pluginsdir)
hwloc_nvml_la_LIBADD =
am__hwloc_nvml_la_SOURCES_DIST = topology-nvml.c
#am_hwloc_nvml_la_OBJECTS = hwloc_nvml_la-topology-nvml.lo
hwloc_nvml_la_OBJECTS = $(am_hwloc_nvml_la_OBJECTS)
hwloc_nvml_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(hwloc_nvml_la_CFLAGS) \
	$(CFLAGS) $(hwloc_nvml_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hwloc_nvml_la_rpath =  \
#	-rpath \
#	$(pluginsdir)
hwloc_opencl_la_LIBADD =
am__hwloc_opencl_la_SOURCES_DIST = topology-opencl.c
#am_hwloc_opencl_la_OBJECTS = hwloc_opencl_la-topology-opencl.lo
hwloc_opencl_la_OBJECTS = $(am_hwloc_opencl_la_OBJECTS)
hwloc_opencl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(hwloc_opencl_la_CFLAGS) $(CFLAGS) $(hwloc_opencl_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_hwloc_opencl_la_rpath = -rpath \
#	$(pluginsdir)
hwloc_pci_la_LIBADD =
am__hwloc_pci_la_SOURCES_DIST = topology-pci.c
#am_hwloc_pci_la_OBJECTS = hwloc_pci_la-topology-pci.lo
hwloc_pci_la_OBJECTS = $(am_hwloc_pci_la_OBJECTS)
hwloc_pci_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(hwloc_pci_la_CFLAGS) \
	$(CFLAGS) $(hwloc_pci_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hwloc_pci_la_rpath =  \
#	-rpath \
#	$(pluginsdir)
hwloc_xml_libxml_la_LIBADD =
am__hwloc_xml_libxml_la_SOURCES_DIST = topology-xml-libxml.c
#am_hwloc_xml_libxml_la_OBJECTS = hwloc_xml_libxml_la-topology-xml-libxml.lo
hwloc_xml_libxml_la_OBJECTS = $(am_hwloc_xml_libxml_la_OBJECTS)
hwloc_xml_libxml_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(hwloc_xml_libxml_la_CFLAGS) $(CFLAGS) \
	$(hwloc_xml_libxml_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hwloc_xml_libxml_la_rpath = -rpath \
#	$(pluginsdir)
libhwloc_la_DEPENDENCIES =
am__libhwloc_la_SOURCES_DIST = topology.c traversal.c distances.c \
	components.c bind.c bitmap.c pci-common.c diff.c misc.c \
	base64.c topology-noos.c topology-synthetic.c \
	topology-custom.c topology-xml.c topology-xml-nolibxml.c \
	topology-xml-libxml.c topology-pci.c topology-opencl.c \
	topology-cuda.c topology-nvml.c topology-gl.c \
	topology-solaris.c topology-solaris-chiptype.c \
	topology-linux.c topology-hardwired.c topology-bgq.c \
	topology-aix.c topology-osf.c topology-hpux.c \
	topology-windows.c topology-darwin.c topology-freebsd.c \
	topology-netbsd.c topology-x86.c
##am__objects_1 = topology-xml-libxml.lo
am__objects_2 = topology-pci.lo
##am__objects_3 = topology-opencl.lo
##am__objects_4 = topology-cuda.lo
##am__objects_5 = topology-nvml.lo
##am__objects_6 = topology-gl.lo
#am__objects_7 = topology-solaris.lo \
#	topology-solaris-chiptype.lo
am__objects_8 = topology-linux.lo \
	topology-hardwired.lo
#am__objects_9 = topology-bgq.lo
#am__objects_10 = topology-aix.lo
#am__objects_11 = topology-osf.lo
#am__objects_12 = topology-hpux.lo
#am__objects_13 = topology-windows.lo
#am__objects_14 = topology-darwin.lo
#am__objects_15 = topology-freebsd.lo
#am__objects_16 = topology-netbsd.lo
#am__objects_17 = topology-x86.lo
am__objects_18 = topology.lo traversal.lo distances.lo components.lo \
	bind.lo bitmap.lo pci-common.lo diff.lo misc.lo base64.lo \
	topology-noos.lo topology-synthetic.lo topology-custom.lo \
	topology-xml.lo topology-xml-nolibxml.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13) \
	$(am__objects_14) $(am__objects_15) $(am__objects_16) \
	$(am__objects_17)
am_libhwloc_la_OBJECTS = $(am__objects_18)
libhwloc_la_OBJECTS = $(am_libhwloc_la_OBJECTS)
libhwloc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libhwloc_la_LDFLAGS) $(LDFLAGS) -o $@
am_libhwloc_la_rpath = -rpath $(libdir)
libhwloc_embedded_la_LIBADD =
am__libhwloc_embedded_la_SOURCES_DIST = topology.c traversal.c \
	distances.c components.c bind.c bitmap.c pci-common.c diff.c \
	misc.c base64.c topology-noos.c topology-synthetic.c \
	topology-custom.c topology-xml.c topology-xml-nolibxml.c \
	topology-xml-libxml.c topology-pci.c topology-opencl.c \
	topology-cuda.c topology-nvml.c topology-gl.c \
	topology-solaris.c topology-solaris-chiptype.c \
	topology-linux.c topology-hardwired.c topology-bgq.c \
	topology-aix.c topology-osf.c topology-hpux.c \
	topology-windows.c topology-darwin.c topology-freebsd.c \
	topology-netbsd.c topology-x86.c
am_libhwloc_embedded_la_OBJECTS = $(am__objects_18)
libhwloc_embedded_la_OBJECTS = $(am_libhwloc_embedded_la_OBJECTS)
#am_libhwloc_embedded_la_rpath =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/private/autogen -I$(top_builddir)/include/hwloc/autogen
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(hwloc_cuda_la_SOURCES) $(hwloc_fake_la_SOURCES) \
	$(hwloc_gl_la_SOURCES) $(hwloc_nvml_la_SOURCES) \
	$(hwloc_opencl_la_SOURCES) $(hwloc_pci_la_SOURCES) \
	$(hwloc_xml_libxml_la_SOURCES) $(libhwloc_la_SOURCES) \
	$(libhwloc_embedded_la_SOURCES)
DIST_SOURCES = $(am__hwloc_cuda_la_SOURCES_DIST) \
	$(am__hwloc_fake_la_SOURCES_DIST) \
	$(am__hwloc_gl_la_SOURCES_DIST) \
	$(am__hwloc_nvml_la_SOURCES_DIST) \
	$(am__hwloc_opencl_la_SOURCES_DIST) \
	$(am__hwloc_pci_la_SOURCES_DIST) \
	$(am__hwloc_xml_libxml_la_SOURCES_DIST) \
	$(am__libhwloc_la_SOURCES_DIST) \
	$(am__libhwloc_embedded_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(xml_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/topology-aix.c \
	$(srcdir)/topology-bgq.c $(srcdir)/topology-cuda.c \
	$(srcdir)/topology-darwin.c $(srcdir)/topology-freebsd.c \
	$(srcdir)/topology-gl.c $(srcdir)/topology-hpux.c \
	$(srcdir)/topology-netbsd.c $(srcdir)/topology-nvml.c \
	$(srcdir)/topology-opencl.c $(srcdir)/topology-osf.c \
	$(srcdir)/topology-solaris-chiptype.c \
	$(srcdir)/topology-solaris.c $(srcdir)/topology-windows.c \
	$(top_srcdir)/./config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/enpower/pocl/hwloc/hwloc-1.11.2/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /root/enpower/pocl/hwloc/hwloc-1.11.2/config/missing autoconf
AUTOHEADER = ${SHELL} /root/enpower/pocl/hwloc/hwloc-1.11.2/config/missing autoheader
AUTOMAKE = ${SHELL} /root/enpower/pocl/hwloc/hwloc-1.11.2/config/missing automake-1.15
AWK = gawk
BASH = /bin/bash
BUNZIPP = bunzip2
CC = gcc
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS =  -g -O2
CONFIGURE_DEPENDENCIES = $(top_srcdir)/VERSION
CPP = gcc -E
CPPFLAGS =  
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EPSTOPDF = 
EXEEXT = 
FGREP = /bin/grep -F
FIG2DEV = 
GREP = /bin/grep
GS = /usr/bin/gs
HWLOC_CAIRO_CFLAGS = 
HWLOC_CAIRO_LIBS = 
HWLOC_CFLAGS =  -fvisibility=hidden 
HWLOC_CPPFLAGS = -I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include
HWLOC_CUDA_LIBS = 
HWLOC_DIFF_U = -u
HWLOC_DIFF_W = -w
HWLOC_EMBEDDED_CFLAGS = 
HWLOC_EMBEDDED_CPPFLAGS = 
HWLOC_EMBEDDED_LDADD = 
HWLOC_EMBEDDED_LIBS = 
HWLOC_GL_LIBS = 
HWLOC_HAVE_LIBXML2 = 0
HWLOC_HAVE_NVML = 0
HWLOC_HAVE_OPENCL = 0
HWLOC_KERRIGHED_CFLAGS = 
HWLOC_KERRIGHED_LIBS = 
HWLOC_LDFLAGS = 
HWLOC_LIBS = -lm   -ludev -lpciaccess 
HWLOC_LIBS_PRIVATE =  -lpthread
HWLOC_LIBXML2_CFLAGS = 
HWLOC_LIBXML2_LIBS = 
HWLOC_LINUX_LIBNUMA_LIBS = 
HWLOC_MS_LIB = 
HWLOC_MS_LIB_ARCH = 
HWLOC_NVML_LIBS = 
HWLOC_OPENCL_LIBS = -lOpenCL
HWLOC_PCIACCESS_CFLAGS = 
HWLOC_PCIACCESS_LIBS = -lpciaccess 
HWLOC_PLUGINS_DIR = $(libdir)/hwloc
HWLOC_PLUGINS_PATH = $(libdir)/hwloc
HWLOC_RELEASE_DATE = Dec 17, 2015
HWLOC_REQUIRES = pciaccess 
HWLOC_TERMCAP_LIBS = 
HWLOC_VERSION = 1.11.2
HWLOC_W3_GENERATOR = 
HWLOC_X11_CPPFLAGS = 
HWLOC_X11_LIBS =   -lX11 
HWLOC_XML_LOCALIZED = 0
HWLOC_top_builddir = /root/enpower/pocl/hwloc/hwloc-1.11.2/build
HWLOC_top_srcdir = /root/enpower/pocl/hwloc/hwloc-1.11.2
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LYNX = 
MAKEINDEX = 
MAKEINFO = ${SHELL} /root/enpower/pocl/hwloc/hwloc-1.11.2/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hwloc
PACKAGE_BUGREPORT = http://www.open-mpi.org/projects/hwloc/
PACKAGE_NAME = hwloc
PACKAGE_STRING = hwloc 1.11.2
PACKAGE_TARNAME = hwloc
PACKAGE_URL = 
PACKAGE_VERSION = 1.11.2
PATH_SEPARATOR = :
PDFLATEX = 
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.11.2
W3M = 
XMKMF = 
XMLLINT = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /root/enpower/pocl/hwloc/hwloc-1.11.2/build/src
abs_srcdir = /root/enpower/pocl/hwloc/hwloc-1.11.2/build/../src
abs_top_builddir = /root/enpower/pocl/hwloc/hwloc-1.11.2/build
abs_top_srcdir = /root/enpower/pocl/hwloc/hwloc-1.11.2/build/..
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = armv7l-unknown-linux-gnueabihf
build_alias = 
build_cpu = armv7l
build_os = linux-gnueabihf
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = armv7l-unknown-linux-gnueabihf
host_alias = 
host_cpu = armv7l
host_os = linux-gnueabihf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/enpower/pocl/hwloc/hwloc-1.11.2/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libhwloc_so_version = 11:8:6
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /root/enpower/pocl/hwloc/hwloc-1.11.2/install
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../src
sysconfdir = ${prefix}/etc
target = armv7l-unknown-linux-gnueabihf
target_alias = 
target_cpu = armv7l
target_os = linux-gnueabihf
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../..
AM_CFLAGS = $(HWLOC_CFLAGS)
AM_CPPFLAGS = $(HWLOC_CPPFLAGS) -DHWLOC_INSIDE_LIBHWLOC \
	-DHWLOC_PLUGINS_PATH=\"$(HWLOC_PLUGINS_PATH)\" \
	$(am__append_30)
AM_LDFLAGS = $(HWLOC_LDFLAGS)
EXTRA_DIST = dolib.c $(am__append_32)

# If we're in standalone mode, build the installable library.
# Otherwise, build the embedded library.
lib_LTLIBRARIES = libhwloc.la
#noinst_LTLIBRARIES = libhwloc_embedded.la
pluginsdir = $(libdir)/hwloc
plugins_LTLIBRARIES = $(am__append_2) $(am__append_4) $(am__append_6) \
	$(am__append_8) $(am__append_10) $(am__append_12)
plugins_ldflags = -module -avoid-version -lltdl

# Sources and ldflags
sources = topology.c traversal.c distances.c components.c bind.c \
	bitmap.c pci-common.c diff.c misc.c base64.c topology-noos.c \
	topology-synthetic.c topology-custom.c topology-xml.c \
	topology-xml-nolibxml.c $(am__append_1) $(am__append_3) \
	$(am__append_5) $(am__append_7) $(am__append_9) \
	$(am__append_11) $(am__append_13) $(am__append_14) \
	$(am__append_15) $(am__append_16) $(am__append_18) \
	$(am__append_20) $(am__append_22) $(am__append_23) \
	$(am__append_24) $(am__append_25) $(am__append_27)
ldflags = $(am__append_17) $(am__append_19) $(am__append_21) \
	$(am__append_26) $(am__append_28) $(am__append_29)
#hwloc_xml_libxml_la_SOURCES = topology-xml-libxml.c
#hwloc_xml_libxml_la_CFLAGS = $(AM_CFLAGS) $(HWLOC_LIBXML2_CFLAGS) -DHWLOC_INSIDE_PLUGIN
#hwloc_xml_libxml_la_LDFLAGS = $(plugins_ldflags) $(HWLOC_LIBXML2_LIBS)
#hwloc_pci_la_SOURCES = topology-pci.c
#hwloc_pci_la_CFLAGS = $(AM_CFLAGS) $(HWLOC_PCIACCESS_CFLAGS) -DHWLOC_INSIDE_PLUGIN
#hwloc_pci_la_LDFLAGS = $(plugins_ldflags) $(HWLOC_PCIACCESS_LIBS)
#hwloc_opencl_la_SOURCES = topology-opencl.c
#hwloc_opencl_la_CFLAGS = $(AM_CFLAGS) $(HWLOC_OPENCL_CFLAGS) -DHWLOC_INSIDE_PLUGIN
#hwloc_opencl_la_LDFLAGS = $(plugins_ldflags) $(HWLOC_OPENCL_LIBS)
#hwloc_cuda_la_SOURCES = topology-cuda.c
#hwloc_cuda_la_CFLAGS = $(AM_CFLAGS) $(HWLOC_CUDA_CFLAGS) -DHWLOC_INSIDE_PLUGIN
#hwloc_cuda_la_LDFLAGS = $(plugins_ldflags) $(HWLOC_CUDA_LIBS)
#hwloc_nvml_la_SOURCES = topology-nvml.c
#hwloc_nvml_la_CFLAGS = $(AM_CFLAGS) $(HWLOC_NVML_CFLAGS) -DHWLOC_INSIDE_PLUGIN
#hwloc_nvml_la_LDFLAGS = $(plugins_ldflags) $(HWLOC_NVML_LIBS)
#hwloc_gl_la_SOURCES = topology-gl.c
#hwloc_gl_la_CFLAGS = $(AM_CFLAGS) $(HWLOC_GL_CFLAGS) -DHWLOC_INSIDE_PLUGIN
#hwloc_gl_la_LDFLAGS = $(plugins_ldflags) $(HWLOC_GL_LIBS)

# Windows specific rules
#LC_MESSAGES = C

# End of Windows specific rules

# Installable library
libhwloc_la_SOURCES = $(sources)
libhwloc_la_LDFLAGS = $(ldflags) -version-info $(libhwloc_so_version) \
	$(HWLOC_LIBS) $(am__append_31)
#libhwloc_la_LIBADD = $(LIBLTDL)

# Embedded library (note the lack of a .so version number -- that
# intentionally only appears in the installable library).  Also note
# the lack of _LDFLAGS -- all libs are added by the upper layer (via
# HWLOC_EMBEDDED_LIBS).
libhwloc_embedded_la_SOURCES = $(sources)

# XML data (only install if we're building in standalone mode)
xml_DATA = $(srcdir)/hwloc.dtd
xmldir = $(pkgdatadir)
DISTCLEANFILES = static-components.h
#check_LTLIBRARIES = hwloc_fake.la
#hwloc_fake_la_SOURCES = topology-fake.c
#hwloc_fake_la_LDFLAGS = $(plugins_ldflags) -rpath /nowhere # force libtool to build a shared-library even it's check-only
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pluginsLTLIBRARIES: $(plugins_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(plugins_LTLIBRARIES)'; test -n "$(pluginsdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pluginsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pluginsdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pluginsdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pluginsdir)"; \
	}

uninstall-pluginsLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugins_LTLIBRARIES)'; test -n "$(pluginsdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pluginsdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pluginsdir)/$$f"; \
	done

clean-pluginsLTLIBRARIES:
	-test -z "$(plugins_LTLIBRARIES)" || rm -f $(plugins_LTLIBRARIES)
	@list='$(plugins_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

hwloc_cuda.la: $(hwloc_cuda_la_OBJECTS) $(hwloc_cuda_la_DEPENDENCIES) $(EXTRA_hwloc_cuda_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_cuda_la_LINK) $(am_hwloc_cuda_la_rpath) $(hwloc_cuda_la_OBJECTS) $(hwloc_cuda_la_LIBADD) $(LIBS)

hwloc_fake.la: $(hwloc_fake_la_OBJECTS) $(hwloc_fake_la_DEPENDENCIES) $(EXTRA_hwloc_fake_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_fake_la_LINK) $(am_hwloc_fake_la_rpath) $(hwloc_fake_la_OBJECTS) $(hwloc_fake_la_LIBADD) $(LIBS)

hwloc_gl.la: $(hwloc_gl_la_OBJECTS) $(hwloc_gl_la_DEPENDENCIES) $(EXTRA_hwloc_gl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_gl_la_LINK) $(am_hwloc_gl_la_rpath) $(hwloc_gl_la_OBJECTS) $(hwloc_gl_la_LIBADD) $(LIBS)

hwloc_nvml.la: $(hwloc_nvml_la_OBJECTS) $(hwloc_nvml_la_DEPENDENCIES) $(EXTRA_hwloc_nvml_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_nvml_la_LINK) $(am_hwloc_nvml_la_rpath) $(hwloc_nvml_la_OBJECTS) $(hwloc_nvml_la_LIBADD) $(LIBS)

hwloc_opencl.la: $(hwloc_opencl_la_OBJECTS) $(hwloc_opencl_la_DEPENDENCIES) $(EXTRA_hwloc_opencl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_opencl_la_LINK) $(am_hwloc_opencl_la_rpath) $(hwloc_opencl_la_OBJECTS) $(hwloc_opencl_la_LIBADD) $(LIBS)

hwloc_pci.la: $(hwloc_pci_la_OBJECTS) $(hwloc_pci_la_DEPENDENCIES) $(EXTRA_hwloc_pci_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_pci_la_LINK) $(am_hwloc_pci_la_rpath) $(hwloc_pci_la_OBJECTS) $(hwloc_pci_la_LIBADD) $(LIBS)

hwloc_xml_libxml.la: $(hwloc_xml_libxml_la_OBJECTS) $(hwloc_xml_libxml_la_DEPENDENCIES) $(EXTRA_hwloc_xml_libxml_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hwloc_xml_libxml_la_LINK) $(am_hwloc_xml_libxml_la_rpath) $(hwloc_xml_libxml_la_OBJECTS) $(hwloc_xml_libxml_la_LIBADD) $(LIBS)

libhwloc.la: $(libhwloc_la_OBJECTS) $(libhwloc_la_DEPENDENCIES) $(EXTRA_libhwloc_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libhwloc_la_LINK) $(am_libhwloc_la_rpath) $(libhwloc_la_OBJECTS) $(libhwloc_la_LIBADD) $(LIBS)

libhwloc_embedded.la: $(libhwloc_embedded_la_OBJECTS) $(libhwloc_embedded_la_DEPENDENCIES) $(EXTRA_libhwloc_embedded_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libhwloc_embedded_la_rpath) $(libhwloc_embedded_la_OBJECTS) $(libhwloc_embedded_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/base64.Plo
include ./$(DEPDIR)/bind.Plo
include ./$(DEPDIR)/bitmap.Plo
include ./$(DEPDIR)/components.Plo
include ./$(DEPDIR)/diff.Plo
include ./$(DEPDIR)/distances.Plo
include ./$(DEPDIR)/hwloc_cuda_la-topology-cuda.Plo
include ./$(DEPDIR)/hwloc_gl_la-topology-gl.Plo
include ./$(DEPDIR)/hwloc_nvml_la-topology-nvml.Plo
include ./$(DEPDIR)/hwloc_opencl_la-topology-opencl.Plo
include ./$(DEPDIR)/hwloc_pci_la-topology-pci.Plo
include ./$(DEPDIR)/hwloc_xml_libxml_la-topology-xml-libxml.Plo
include ./$(DEPDIR)/misc.Plo
include ./$(DEPDIR)/pci-common.Plo
include ./$(DEPDIR)/topology-aix.Plo
include ./$(DEPDIR)/topology-bgq.Plo
include ./$(DEPDIR)/topology-cuda.Plo
include ./$(DEPDIR)/topology-custom.Plo
include ./$(DEPDIR)/topology-darwin.Plo
include ./$(DEPDIR)/topology-fake.Plo
include ./$(DEPDIR)/topology-freebsd.Plo
include ./$(DEPDIR)/topology-gl.Plo
include ./$(DEPDIR)/topology-hardwired.Plo
include ./$(DEPDIR)/topology-hpux.Plo
include ./$(DEPDIR)/topology-linux.Plo
include ./$(DEPDIR)/topology-netbsd.Plo
include ./$(DEPDIR)/topology-noos.Plo
include ./$(DEPDIR)/topology-nvml.Plo
include ./$(DEPDIR)/topology-opencl.Plo
include ./$(DEPDIR)/topology-osf.Plo
include ./$(DEPDIR)/topology-pci.Plo
include ./$(DEPDIR)/topology-solaris-chiptype.Plo
include ./$(DEPDIR)/topology-solaris.Plo
include ./$(DEPDIR)/topology-synthetic.Plo
include ./$(DEPDIR)/topology-windows.Plo
include ./$(DEPDIR)/topology-x86.Plo
include ./$(DEPDIR)/topology-xml-libxml.Plo
include ./$(DEPDIR)/topology-xml-nolibxml.Plo
include ./$(DEPDIR)/topology-xml.Plo
include ./$(DEPDIR)/topology.Plo
include ./$(DEPDIR)/traversal.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

hwloc_cuda_la-topology-cuda.lo: topology-cuda.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_cuda_la_CFLAGS) $(CFLAGS) -MT hwloc_cuda_la-topology-cuda.lo -MD -MP -MF $(DEPDIR)/hwloc_cuda_la-topology-cuda.Tpo -c -o hwloc_cuda_la-topology-cuda.lo `test -f 'topology-cuda.c' || echo '$(srcdir)/'`topology-cuda.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_cuda_la-topology-cuda.Tpo $(DEPDIR)/hwloc_cuda_la-topology-cuda.Plo
#	$(AM_V_CC)source='topology-cuda.c' object='hwloc_cuda_la-topology-cuda.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_cuda_la_CFLAGS) $(CFLAGS) -c -o hwloc_cuda_la-topology-cuda.lo `test -f 'topology-cuda.c' || echo '$(srcdir)/'`topology-cuda.c

hwloc_gl_la-topology-gl.lo: topology-gl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_gl_la_CFLAGS) $(CFLAGS) -MT hwloc_gl_la-topology-gl.lo -MD -MP -MF $(DEPDIR)/hwloc_gl_la-topology-gl.Tpo -c -o hwloc_gl_la-topology-gl.lo `test -f 'topology-gl.c' || echo '$(srcdir)/'`topology-gl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_gl_la-topology-gl.Tpo $(DEPDIR)/hwloc_gl_la-topology-gl.Plo
#	$(AM_V_CC)source='topology-gl.c' object='hwloc_gl_la-topology-gl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_gl_la_CFLAGS) $(CFLAGS) -c -o hwloc_gl_la-topology-gl.lo `test -f 'topology-gl.c' || echo '$(srcdir)/'`topology-gl.c

hwloc_nvml_la-topology-nvml.lo: topology-nvml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_nvml_la_CFLAGS) $(CFLAGS) -MT hwloc_nvml_la-topology-nvml.lo -MD -MP -MF $(DEPDIR)/hwloc_nvml_la-topology-nvml.Tpo -c -o hwloc_nvml_la-topology-nvml.lo `test -f 'topology-nvml.c' || echo '$(srcdir)/'`topology-nvml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_nvml_la-topology-nvml.Tpo $(DEPDIR)/hwloc_nvml_la-topology-nvml.Plo
#	$(AM_V_CC)source='topology-nvml.c' object='hwloc_nvml_la-topology-nvml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_nvml_la_CFLAGS) $(CFLAGS) -c -o hwloc_nvml_la-topology-nvml.lo `test -f 'topology-nvml.c' || echo '$(srcdir)/'`topology-nvml.c

hwloc_opencl_la-topology-opencl.lo: topology-opencl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_opencl_la_CFLAGS) $(CFLAGS) -MT hwloc_opencl_la-topology-opencl.lo -MD -MP -MF $(DEPDIR)/hwloc_opencl_la-topology-opencl.Tpo -c -o hwloc_opencl_la-topology-opencl.lo `test -f 'topology-opencl.c' || echo '$(srcdir)/'`topology-opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_opencl_la-topology-opencl.Tpo $(DEPDIR)/hwloc_opencl_la-topology-opencl.Plo
#	$(AM_V_CC)source='topology-opencl.c' object='hwloc_opencl_la-topology-opencl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_opencl_la_CFLAGS) $(CFLAGS) -c -o hwloc_opencl_la-topology-opencl.lo `test -f 'topology-opencl.c' || echo '$(srcdir)/'`topology-opencl.c

hwloc_pci_la-topology-pci.lo: topology-pci.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_pci_la_CFLAGS) $(CFLAGS) -MT hwloc_pci_la-topology-pci.lo -MD -MP -MF $(DEPDIR)/hwloc_pci_la-topology-pci.Tpo -c -o hwloc_pci_la-topology-pci.lo `test -f 'topology-pci.c' || echo '$(srcdir)/'`topology-pci.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_pci_la-topology-pci.Tpo $(DEPDIR)/hwloc_pci_la-topology-pci.Plo
#	$(AM_V_CC)source='topology-pci.c' object='hwloc_pci_la-topology-pci.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_pci_la_CFLAGS) $(CFLAGS) -c -o hwloc_pci_la-topology-pci.lo `test -f 'topology-pci.c' || echo '$(srcdir)/'`topology-pci.c

hwloc_xml_libxml_la-topology-xml-libxml.lo: topology-xml-libxml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_xml_libxml_la_CFLAGS) $(CFLAGS) -MT hwloc_xml_libxml_la-topology-xml-libxml.lo -MD -MP -MF $(DEPDIR)/hwloc_xml_libxml_la-topology-xml-libxml.Tpo -c -o hwloc_xml_libxml_la-topology-xml-libxml.lo `test -f 'topology-xml-libxml.c' || echo '$(srcdir)/'`topology-xml-libxml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_xml_libxml_la-topology-xml-libxml.Tpo $(DEPDIR)/hwloc_xml_libxml_la-topology-xml-libxml.Plo
#	$(AM_V_CC)source='topology-xml-libxml.c' object='hwloc_xml_libxml_la-topology-xml-libxml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hwloc_xml_libxml_la_CFLAGS) $(CFLAGS) -c -o hwloc_xml_libxml_la-topology-xml-libxml.lo `test -f 'topology-xml-libxml.c' || echo '$(srcdir)/'`topology-xml-libxml.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-xmlDATA: $(xml_DATA)
	@$(NORMAL_INSTALL)
	@list='$(xml_DATA)'; test -n "$(xmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xmldir)" || exit $$?; \
	done

uninstall-xmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xml_DATA)'; test -n "$(xmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xmldir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES)
check: check-am
all-local:
all-local:
all-am: Makefile $(LTLIBRARIES) $(DATA) all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pluginsdir)" "$(DESTDIR)$(xmldir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
uninstall-local:
clean-local:
clean-local:
install-exec-hook:
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-pluginsLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pluginsLTLIBRARIES install-xmlDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-local \
	uninstall-pluginsLTLIBRARIES uninstall-xmlDATA

.MAKE: check-am install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-checkLTLIBRARIES clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-pluginsLTLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am \
	install-pluginsLTLIBRARIES install-ps install-ps-am \
	install-strip install-xmlDATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLTLIBRARIES uninstall-local \
	uninstall-pluginsLTLIBRARIES uninstall-xmlDATA

.PRECIOUS: Makefile

#export LC_MESSAGES

##dolib$(EXEEXT): dolib.c
##	$(CC_FOR_BUILD) $< -o $@
##.libs/libhwloc.lib: libhwloc.la dolib$(EXEEXT)
##	[ ! -r .libs/libhwloc.def ] || ./dolib$(EXEEXT) "$(HWLOC_MS_LIB)" $(HWLOC_MS_LIB_ARCH) .libs/libhwloc.def $(libhwloc_so_version) .libs/libhwloc.lib
##all-local: .libs/libhwloc.lib
##clean-local:
##	$(RM) dolib$(EXEEXT)

#install-exec-hook:
#	[ ! -r .libs/libhwloc.def ] || $(INSTALL) .libs/libhwloc.def $(DESTDIR)$(libdir)
##	[ ! -r .libs/libhwloc.def ] || $(INSTALL) .libs/libhwloc.lib $(DESTDIR)$(libdir)
##	[ ! -r .libs/libhwloc.def ] || $(INSTALL) .libs/libhwloc.exp $(DESTDIR)$(libdir)

#uninstall-local:
#	rm -f $(DESTDIR)$(libdir)/libhwloc.def
##	rm -f $(DESTDIR)$(libdir)/libhwloc.lib $(DESTDIR)$(libdir)/libhwloc.exp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
